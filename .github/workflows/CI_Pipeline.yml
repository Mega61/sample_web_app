name: Web_CI

on:
  workflow_dispatch:
#   pull_request:
#     branches: [ main ]

jobs:
  build:

    runs-on: ubuntu-latest
    env:
      REPO_OWNER: Mega61

    strategy:
      matrix:
        node-version: [18.x]

    steps:
    - name: Checkout sample_front_end
      uses: actions/checkout@v2
      with:
        repository: ${{ env.REPO_OWNER }}/sample_web_app
        path: ${{ env.REPO_OWNER }}/sample_web_app

    - name: Checkout microservice_1
      uses: actions/checkout@v2
      with:
        repository: ${{ env.REPO_OWNER }}/sample_weather_microservice
        path: ${{ env.REPO_OWNER }}/sample_weather_microservice

    - name: Checkout microservice_2
      uses: actions/checkout@v2
      with:
        repository: ${{ env.REPO_OWNER }}/sample_location_microservice
        path: ${{ env.REPO_OWNER }}/sample_location_microservice

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v2
      with:
        node-version: ${{ matrix.node-version }}

    - name: Setup .env for microservice_1
      run: |
        echo "${{ secrets.ENV_FILE }}" > ${{ env.REPO_OWNER }}/sample_weather_microservice/.env
        echo "${{ secrets.ENV_FILE2 }}" > ${{ env.REPO_OWNER }}/sample_location_microservice/.env
    
    - name: Install dependencies and start front_end
      run: |
        cd ${{ env.REPO_OWNER }}/sample_web_app
        npm ci
        npm run dev &
      env:
        CI: true

    - name: Install dependencies and start back_end 1
      run: |
        cd ${{ env.REPO_OWNER }}/sample_weather_microservice
        npm ci
        npm run dev &
      env:
        CI: true

    - name: Install dependencies and start back_end 1
      run: |
        cd ${{ env.REPO_OWNER }}/sample_location_microservice
        npm ci
        npm run dev &
      env:
        CI: true

        # npm run build

        # 
        # cd ../microservice2
        # npm ci
        # npm run dev &
        # cd ../microservice3
        # npm ci
        # npm run dev &

        #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

        